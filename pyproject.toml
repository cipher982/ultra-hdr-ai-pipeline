[build-system]
requires = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[project]
name = "hdr-pipeline"
version = "0.1.0"
description = "Ultra HDR gain-map pipeline for JPEG_R and HEIC export"
readme = "README.md"
requires-python = ">=3.11,<3.12"
authors = [{ name = "David Rose", email = "" }]
license = { text = "BSD-3-Clause" }
keywords = ["HDR", "gain-map", "JPEG_R", "HEIC", "Ultra-HDR", "ISO-21496-1"]

dependencies = [
  "numpy>=1.22",
  "Pillow>=9.0",
  "imageio>=2.25",
  "tifffile>=2023.7.10",
  # Optional TensorFlow for model inference (Apple Silicon optimized)
  "tensorflow-macos>=2.13; platform_system == 'Darwin' and platform_machine == 'arm64'",
  "tensorflow-metal>=1.1; platform_system == 'Darwin' and platform_machine == 'arm64'",
  # Other platforms: standard TensorFlow
  "tensorflow>=2.12; platform_system != 'Darwin' or platform_machine != 'arm64'",
  "torch>=2.8.0",
  "torchvision>=0.23.0",
  "opencv-python>=4.11.0.86",
  "pyyaml>=6.0.2",
  "nvidia-ml-py>=13.580.65",
  # Web service dependencies
  "fastapi>=0.104.0",
  "uvicorn>=0.24.0",
  "python-multipart>=0.0.6",  # For file uploads
  "jinja2>=3.1.2",
]

[project.optional-dependencies]
dev = [
  # Core testing framework
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "pytest-xdist>=3.5",  # parallel test execution
  "pytest-cov>=4.0",    # coverage reporting
  
  # Visual validation and metrics
  "scikit-image>=0.22",  # PSNR, SSIM metrics
  "imagehash>=4.3",      # perceptual hashing
  "lpips>=0.1.4",        # learned perceptual similarity
  
  # Web testing
  "playwright>=1.46",
  "httpx>=0.27",         # async HTTP client for API testing
  "requests>=2.31",
  
  # Image processing for test validation
  "exifread>=3.0",       # EXIF metadata validation
  "pillow-heif>=0.18",   # HEIC format support for testing
  
  # Test utilities
  "faker>=24.0",         # generate test data
  "parameterized>=0.9",  # parameterized test cases
  "psutil>=5.9",         # system resource monitoring
]
exr = [
  "OpenEXR>=1.3.9",
]
web = [
  "streamlit>=1.33",
  "playwright>=1.46",
]

[project.scripts]
hdr-process = "hdr.gainmap_pipeline:main"

[tool.hatch.build.targets.wheel]
packages = ["hdr"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=hdr",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "visual: marks tests that do visual validation", 
    "web: marks tests that require web service",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["hdr"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/GMNet/*",  # External research code
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.uv]
# Use project-local virtualenv and manage Python automatically.
package = true
python-preference = "managed"
